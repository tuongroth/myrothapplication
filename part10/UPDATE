// App.js

import React from 'react';
import { View, Text, FlatList, Button, StyleSheet, Alert, Image } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';
import { format } from 'date-fns';

// Repository's information component
const RepositoryInfo = ({ repository }) => {
  return (
    <View style={styles.header}>
      <Text style={styles.repoName}>{repository.name}</Text>
      <Text style={styles.repoDescription}>{repository.description}</Text>
      <Text style={styles.repoStats}>
        Stars: {repository.stars} | Forks: {repository.forks}
      </Text>
    </View>
  );
};

// Single review item component
const ReviewItem = ({ review, onDelete }) => {
  const formattedDate = format(new Date(review.createdAt), 'dd.MM.yyyy');

  return (
    <View style={styles.reviewItem}>
      <Image source={{ uri: review.user.avatar }} style={styles.avatar} />
      <View style={styles.reviewDetails}>
        <View style={styles.ratingContainer}>
          <Text style={styles.ratingText}>{review.rating}</Text>
        </View>
        <View style={styles.reviewContent}>
          <Text style={styles.userName}>{review.user.name}</Text>
          <Text style={styles.createdAt}>{formattedDate}</Text>
          <Text style={styles.reviewText}>{review.text}</Text>
        </View>
        <View style={styles.buttonContainer}>
          <Button title="View Repository" onPress={() => console.log('Navigating to repository details')} />
          <Button title="Delete" onPress={onDelete} color="red" />
        </View>
      </View>
    </View>
  );
};

// Main FlatList component
const SingleRepository = () => {
  const repository = {
    name: 'React Native',
    description: 'A framework for building native apps using React.',
    stars: 12000,
    forks: 2000,
  };

  const reviews = [
    {
      id: '1',
      user: { name: 'MehilÃ¤inen', avatar: 'https://randomuser.me/api/portraits/men/1.jpg' },
      rating: 90,
      text: 'Before: Constantly late, making the whole team wait, showing no emotion. || After: "Not late anymore! Prioritizing mental health."',
      createdAt: '2023-10-20',
    },
    {
      id: '2',
      user: { name: 'Nurse', avatar: 'https://randomuser.me/api/portraits/women/2.jpg' },
      rating: 85,
      text: 'Before: "Struggling with sleep and focus." || After: "Able to sleep and focus; prioritizing mental health and meditation is helping."',
      createdAt: '2023-10-21',
    },
    {
      id: '3',
      user: { name: 'Basma/Monika-Naiset', avatar: 'https://randomuser.me/api/portraits/women/3.jpg' },
      rating: 92,
      text: 'Before: No soul, suffering from PTSD exhaustion and lack of energy. || After: "Reenergized, gaining a more balanced perspective on health."',
      createdAt: '2023-10-22',
    },
  ];

  const handleDeleteReview = (reviewId) => {
    Alert.alert(
      'Confirm Deletion',
      'Are you sure you want to delete this review?',
      [
        { text: 'Cancel', style: 'cancel' },
        {
          text: 'Delete',
          onPress: () => {
            console.log(`Deleted review with ID: ${reviewId}`);
          },
        },
      ]
    );
  };

  return (
    <FlatList
      data={reviews}
      renderItem={({ item }) => (
        <ReviewItem review={item} onDelete={() => handleDeleteReview(item.id)} />
      )}
      keyExtractor={({ id }) => id}
      ListHeaderComponent={() => <RepositoryInfo repository={repository} />}
      ItemSeparatorComponent={() => <View style={styles.separator} />}
    />
  );
};

// Main App Component
const App = () => {
  const Stack = createNativeStackNavigator();

  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="SingleRepository">
        <Stack.Screen name="SingleRepository" component={SingleRepository} options={{ title: 'Repository Reviews' }} />
      </Stack.Navigator>
    </NavigationContainer>
  );
};

// Styles for the component
const styles = StyleSheet.create({
  header: {
    padding: 16,
    backgroundColor: '#f8f8f8',
  },
  repoName: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  repoDescription: {
    fontSize: 16,
    color: '#555',
  },
  repoStats: {
    fontSize: 14,
    color: '#777',
  },
  reviewItem: {
    flexDirection: 'row',
    padding: 16,
    backgroundColor: '#ffffff',
  },
  avatar: {
    width: 50,
    height: 50,
    borderRadius: 25,
    marginRight: 10,
  },
  reviewDetails: {
    flex: 1,
  },
  ratingContainer: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: '#0366d6',
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 10,
  },
  ratingText: {
    color: '#ffffff',
    fontWeight: 'bold',
  },
  reviewContent: {
    flex: 1,
  },
  userName: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  createdAt: {
    fontSize: 14,
    color: '#555',
  },
  reviewText: {
    fontSize: 16,
    color: '#333',
    marginTop: 4,
  },
  buttonContainer: {
    marginTop: 10,
    flexDirection: 'column',
    justifyContent: 'space-between',
  },
  separator: {
    height: 10,
    backgroundColor: '#eaeaea',
  },
});

export default App;
