import React, { useState } from 'react';
import { View, TextInput, Button, StyleSheet, Text, Alert, FlatList, Pressable } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import * as Linking from 'expo-linking';

// Mock repository data
const repositories = [
  { id: '1', fullName: 'jaredpalmer/formik', url: 'https://github.com/jaredpalmer/formik' },
  { id: '2', fullName: 'facebook/react', url: 'https://github.com/facebook/react' },
];

// Home Screen Component
function HomeScreen({ navigation }) {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Repository List</Text>
      <FlatList
        data={repositories}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <Pressable onPress={() => navigation.navigate('Repository', { repoId: item.id })}>
            <Text style={styles.repoItem}>{item.fullName}</Text>
          </Pressable>
        )}
      />
    </View>
  );
}

// SignIn Screen Component
function SignInScreen() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = () => {
    const values = { username, password };
    console.log(values); // Logs form values when submitted
    Alert.alert(`Username: ${username}, Password: ${password}`);

    // Reset the form fields after submission
    setUsername('');
    setPassword('');
  };

  return (
    <View style={styles.container}>
      <TextInput
        style={styles.input}
        placeholder="Username"
        onChangeText={setUsername}
        value={username}
      />
      <TextInput
        style={styles.input}
        placeholder="Password"
        secureTextEntry
        onChangeText={setPassword}
        value={password}
      />
      <Button title="Sign In" onPress={handleSubmit} />
    </View>
  );
}

// Repository View Component
function RepositoryView({ route }) {
  const { repoId } = route.params;
  const repository = repositories.find(repo => repo.id === repoId); // Mock fetching from Apollo Client

  const openGitHub = () => {
    Linking.openURL(repository.url);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>{repository.fullName}</Text>
      <Button title="Open on GitHub" onPress={openGitHub} />
    </View>
  );
}

// Create Bottom Tab Navigator
const Tab = createBottomTabNavigator();

// Main App Function
export default function App() {
  return (
    <NavigationContainer>
      <Tab.Navigator>
        <Tab.Screen name="Home" component={HomeScreen} />
        <Tab.Screen name="Sign In" component={SignInScreen} />
        <Tab.Screen name="Repository" component={RepositoryView} />
      </Tab.Navigator>
    </NavigationContainer>
  );
}

// Styles
const styles = StyleSheet.create({
  container: {
    padding: 20,
    justifyContent: 'center',
    flex: 1,
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 10,
    paddingHorizontal: 10,
  },
  title: {
    fontSize: 24,
    marginBottom: 20,
    textAlign: 'center',
  },
  repoItem: {
    padding: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
});
