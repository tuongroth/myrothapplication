import React, { useState } from 'react';
import { View, TextInput, Button, StyleSheet, Text } from 'react-native';

// MongoDB Realm Authentication API endpoint and headers
const MONGO_AUTH_URL = 'https://eu-west-2.aws.services.cloud.mongodb.com/api/client/v2.0/app/data-zbmnuij/auth/providers/local-userpass/login';

const SignIn = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [token, setToken] = useState(null);

  const handleSignIn = async () => {
    setLoading(true);
    setError(null);

    try {
      const response = await fetch(MONGO_AUTH_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password }),
      });

      const result = await response.json();
      
      if (response.ok) {
        setToken(result.access_token); // Save or use the token as needed
        console.log('Sign-in successful, token:', result.access_token);
      } else {
        setError(result.error || 'Sign-in failed');
      }
    } catch (e) {
      console.error('Sign-in error:', e);
      setError('An error occurred during sign-in.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <View style={styles.container}>
      <TextInput
        style={styles.input}
        placeholder="Username"
        value={username}
        onChangeText={setUsername}
      />
      <TextInput
        style={styles.input}
        placeholder="Password"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
      />
      <Button title="Sign In" onPress={handleSignIn} disabled={loading} />
      {error && <Text style={styles.error}>{error}</Text>}
      {token && <Text style={styles.success}>Sign-in successful! Token: {token}</Text>}
    </View>
  );
};

// Main App component
const App = () => {
  return <SignIn />;
};

// Styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    padding: 16,
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 12,
    paddingHorizontal: 8,
  },
  error: {
    color: 'red',
    marginTop: 12,
  },
  success: {
    color: 'green',
    marginTop: 12,
  },
});

export default App;

